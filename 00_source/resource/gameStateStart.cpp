//============================================================
//
//	開始演出状態処理 [gameStateStart.cpp]
//	Author：藤田勇一
//
//============================================================
//************************************************************
//	インクルードファイル
//************************************************************
#include "gameStateStart.h"
#include "gameManager.h"
#include "start.h"

//************************************************************
//	子クラス [CGameStateStart] のメンバ関数
//************************************************************
//============================================================
//	コンストラクタ
//============================================================
CGameStateStart::CGameStateStart() :
	m_pStart	(nullptr)	// 開始演出情報
{

}

//============================================================
//	デストラクタ
//============================================================
CGameStateStart::~CGameStateStart()
{

}

//============================================================
//	初期化処理
//============================================================
HRESULT CGameStateStart::Init()
{
	// メンバ変数を初期化
	m_pStart = nullptr;	// 開始演出情報

	// 開始演出の生成
	m_pStart = CStart::Create();
	if (m_pStart == nullptr)
	{ // 生成に失敗した場合

		assert(false);
		return E_FAIL;
	}

	return S_OK;
}

//============================================================
//	終了処理
//============================================================
void CGameStateStart::Uninit()
{
	// 開始演出の終了
	SAFE_UNINIT(m_pStart);

	// 自身の破棄
	delete this;
}

//============================================================
//	更新処理
//============================================================
void CGameStateStart::Update(const float fDeltaTime)
{
	// 操作不可能状態にする
	m_pContext->SetEnableControlOK(false);

	// 開始演出の更新
	m_pStart->Update(fDeltaTime);

	if (m_pStart->IsStagEnd())
	{ // 開始演出が終了した場合

		// 通常状態にする
		m_pContext->ChangeState(new CGameStateNormal);
	}
}
